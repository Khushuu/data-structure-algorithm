1. Sparse Graph
A sparse graph has very few edges compared to the maximum possible edges.

Characteristics:
âœ… Few edges â†’ Eâ‰ˆO(V)
âœ… Adjacency List is preferred (memory-efficient)
âœ… Common in real-world applications (e.g., road networks, social networks)
âœ… MST algorithms like Kruskalâ€™s work efficiently

Example of a Sparse Graph (V=6,E=5):

   0 -- 1
   |    
   2    3 -- 4 -- 5

ðŸ‘‰ Maximum possible edges for 6 vertices: V(Vâˆ’1)/2=15
ðŸ‘‰ Actual edges: 5 (much smaller than 15) â†’ Sparse Graph


2. Dense Graph
A dense graph has many edges, close to the maximum possible edges.

Characteristics:
âœ… Many edges â†’ Eâ‰ˆO(V^2)
âœ… Adjacency Matrix is preferred (fast edge lookup but uses more space)
âœ… Used in complete or near-complete graphs
âœ… Primâ€™s Algorithm works well (using an adjacency matrix)

Example of a Dense Graph (V=6,E=14):

   0 -- 1 -- 2
   |  \/ |  /
   3 -- 4 -- 5

ðŸ‘‰ Maximum possible edges: 15
ðŸ‘‰ Actual edges: 14 (almost full) â†’ Dense Graph
